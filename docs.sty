%! Class = docs
%! Author = Jander Moreira
%! Date = 2024/10

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{docs}[2024/10/27 v0.1 Format documentation]
%\LoadClass[11pt]{article}

\NewDocumentCommand{\DocsVersion}{}{v0.1}
\NewDocumentCommand{\DocsDate}{}{2024/10/27}

\RequirePackage{etoolbox}
\appto{\ttfamily}{\frenchspacing}{}{}
\appto{\tableofcontents}{\bigskip}

\RequirePackage{enumitem}
\setlist{nosep}

\RequirePackage{textcomp}
\RequirePackage[all]{nowidow}

\RequirePackage{geometry}
\geometry{top = 2.5cm, bottom = 2cm, right = 2.5cm, left = 4cm}

\RequirePackage{hyperref}
\hypersetup{
    colorlinks,
    urlcolor = blue!20!black,
    linkcolor = blue!10!black,
    citecolor = black!80,
}

\RequirePackage{cleveref}

\RequirePackage{makeidx}
\makeindex

\RequirePackage{minted}
\newminted{latex}{autogobble, breaklines, bgcolor = blue!5, fontsize = \footnotesize}
\newmintinline{latex}{}

\RequirePackage{tcolorbox}
\tcbuselibrary{skins, listings, minted, breakable}
\tcbset{
    description/.style = {
        coltitle = black,
        fontupper = \normalsize,
        colbacktitle = black!10,
        titlerule = 0.001pt,
        enhanced jigsaw,
        breakable,
        width = \dimexpr \linewidth - 2em \relax,
        flush right,
        top = 0.5ex,
        bottom = 0pt,
        left = 0pt,
        right = 0pt,
        opacitybacktitle = 0,
        opacityframe = 0,
        opacityback = 0,
    },
    example/.style = {
        enhanced jigsaw,
        breakable,
        colback = blue!3,
        colframe = blue!40!black!30,
        sharp corners,
        box align = top,
        boxrule = 1pt,
        %fontupper = \footnotesize,
        %fontlower = \footnotesize,
        minted options = {
            fontsize = \footnotesize,
            breaklines,
            autogobble,
        },
        listing engine = minted,
    }
}
\newtcblisting{example}[1]{
    example,
    #1
}

%% Support code

\ExplSyntaxOn
\seq_new:N \g_docs_list_of_elements_seq
\cs_new:Npn \docs_put_element:n #1 {
    \seq_put_left:Nn \g_docs_list_of_elements_seq { #1 }
}
\cs_new:Npn \docs_if_element_exists:nTF #1#2#3 {
    \seq_if_in:NnTF \g_docs_list_of_elements_seq { #1 } { #2 } { #3 }
}

\NewDocumentCommand{\docs@PutElement}{ m }{
    \docs_put_element:n { #1 }
}
\NewDocumentCommand{\docs@IfElementExists}{ m +m +m }{
    \docs_if_element_exists:nTF { #1 } { #2 } { #3 }
}
\ExplSyntaxOff

\docs@PutElement{docs@Element}

\newlength{\docs@ContentLength}
\NewDocumentCommand{\docs@IfHasLength}{ m +m +m }{%
    \settowidth{\docs@ContentLength}{#1}%
    \ifdimgreater{\docs@ContentLength}{0pt}{#2}{#3}%
}



\NewDocumentCommand{\PackageName}{ O{} m }{%
    \begingroup%
    \DocsSet{#1}%
    \mbox{\docs@PackageStyle#2}%
    \endgroup%
}

% Arguments
\NewDocumentCommand{\Argument}{ O{} m }{%
    \begingroup%
    \DocsSet{#1}%
    \textcolor{docs@ArgumentColor}{$\langle$\normalfont\small\textsl{#2}$\rangle$}%
    \endgroup%
}
\NewDocumentCommand{\MArg}{ O{} m }{%
    \mbox{\texttt{\{}\Argument[#1]{#2}\texttt{\}}}%
}
\NewDocumentCommand{\OArg}{ O{} m }{%
    \mbox{\texttt{[}\Argument[#1]{#2}\texttt{]}}%
}
\NewDocumentCommand{\AArg}{ O{} m }{%
    \mbox{\texttt{<}\Argument[#1]{#2}\texttt{>}}%
}
\NewDocumentCommand{\PArg}{ m }{%
    \mbox{\texttt{\{#1\}}}%
}

% General text
\NewDocumentCommand{\Deprecated}{}{\textcolor{red!80!black}{(deprecated)}}
\NewDocumentCommand{\Empty}{}{%
    \mbox{\normalfont\textcolor{black!60}{\textsl{--empty--}}}
}
\NewDocumentCommand{\DocsTilde}{}{\raisebox{-0.5ex}{\~{}}}

% Elements
\pgfkeys{
    /docs/.cd,
    argument color/.code = {\colorlet{docs@ArgumentColor}{#1}},
    package style/.store in = \docs@PackageStyle,
% element specific options
    prefix/.code = {\csdef{docs@\csuse{docs@Element}@Prefix}{#1}},
    prefix/.value required,
    arguments prefix/.code = {\csdef{docs@\csuse{docs@Element}@ArgumentsPrefix}{#1}},
    arguments prefix/.value required,
    complement prefix/.code = {\csdef{docs@\csuse{docs@Element}@ComplementPrefix}{#1}},
    complement prefix/.value required,
    index heading/.code = {\csdef{docs@\csuse{docs@Element}@IndexEntry}{#1}},
    index heading/.value required,
    index remark/.code = {\csdef{docs@\csuse{docs@Element}@IndexRemark}{#1}},
    index remark/.value required,
    font/.code = {\csdef{docs@\csuse{docs@Element}@Font}{#1}},
    font/.value required,
    color/.code = {\colorlet{docs@\csuse{docs@Element}@Color}{#1}},
    color/.value required,
    no single index/.default = true,
    no single index/.code = {%
        \providebool{docs@\csuse{docs@Element}@NoSingleEntry}%
        \docs@CheckTrueFalse{no single index}{#1}{%
            \csuse{bool#1}{docs@\csuse{docs@Element}@NoSingleEntry}%
        }%
    },
    no group index/.default = true,
    no group index/.code = {%
        \providebool{docs@\csuse{docs@Element}@NoGroupEntry}%
        \docs@CheckTrueFalse{no group index}{#1}{%
            \csuse{bool#1}{docs@\csuse{docs@Element}@NoGroupEntry}%
        }
    },
}

\NewDocumentCommand{\docs@CheckTrueFalse}{ m m m }{
    \ifstrequal{#2}{true}{#3}{%
        \ifstrequal{#2}{false}{#3}{%
            \PackageError{docs}{Option '#1' expects 'true' or 'false'}%
        }%
    }
}

\NewDocumentCommand{\docs@SetElementDefault}{ m }{%
    \csdef{docs@Element}{#1}% current element
    \pgfkeys{
        /docs/.cd,
        prefix = \csuse{docs@Element@Defaults@Prefix},
        arguments prefix = \csuse{docs@Element@Defaults@ArgumentsPrefix},
        complement prefix = \csuse{docs@Element@Defaults@ComplementPrefix},
        index heading = \docs@Element,
        index remark = ~(\docs@Element),
        font = \csuse{docs@Element@Defaults@Font},
        color = docs@Element@Defaults@Color,
        no single index = false,
        no group index = false,
    }%
    \csdef{docs@Element}{}% reset
}

\NewDocumentCommand{\DocsSetElement}{ m >{ \TrimSpaces } m }{%
    \docs@IfElementExists{#1}{%
        \csdef{docs@Element}{#1}% current element
        \pgfkeys{/docs/.cd, #2}%
        \csdef{docs@Element}{}% reset
    }{%
        \PackageError{docs}{Element '#1' does not exist}%
    }
}
\NewDocumentCommand{\DocsSet}{ >{ \TrimSpaces } m }{%
    \csdef{docs@Element}{Element@Defaults}%
    \pgfkeys{/docs/.cd, #1}%
    \csdef{docs@Element}{}% reset
}

\DocsSet{
    package style = \sffamily,
    argument color = orange!50!black,
    prefix = {},
    arguments prefix = {},
    complement prefix = \hfill,
    index heading = {},
    index remark = {},
    font = \ttfamily,
    color = .!75,
    no single index = false,
    no group index = false,
}


\ExplSyntaxOn
\NewDocumentCommand{\DocsCreateElement}{ m m }{
    \docs@IfElementExists{#1}{
        \PackageError{docs}{Element~'#1'~already~created}
    }{
        \docs@PutElement{#1}
        \docs@SetElementDefault{#1}%
        \DocsSetElement{#1}{#2}%
        \exp_args:Nc \NewDocumentCommand { #1 }{ m }{
            \DocsElement{#1}{##1}
        }
        \exp_args:Nc \NewDocumentCommand { #1Def }{ m }{
            \DocsDefElement{#1}{##1}
        }
        \exp_args:Nc \NewDocumentCommand { #1Ref }{ m }{
            \DocsRefElement{#1}{##1}
        }
        \exp_args:Nc \NewDocumentCommand { #1Ind }{ m }{
            \DocsIndElement{#1}{##1}
        }
        \exp_args:Nc \NewDocumentCommand { #1Index }{ m }{
            \DocsIndexElement{#1}{##1}
        }
        \exp_args:Nc \NewDocumentCommand { #1RefInd }{ m }{
            \DocsRefIndElement{#1}{##1}
        }
        \NewDocumentEnvironment{#1*}{ m m m }{%
            \begin{element*}{#1}{##1}{##2}{##3}
            }{
            \end{element*}
        }
        \NewDocumentEnvironment{#1def}{ m m m }{
            \begin{elementdef}{#1}{##1}{##2}{##3}
            }{
            \end{elementdef}
        }
        \NewDocumentEnvironment{#1env}{ m m }{
            \begin{elementenv*}{#1}{##1}{##2}
            }{
            \end{elementenv*}
        }
    }
}
\ExplSyntaxOff

% #1: Element type
% #2: Element instance
\NewDocumentCommand{\DocsElement}{ m m }{%
    \ifcsdef{\string\color@docs@#1@Color}{%
        \mbox{\textcolor{docs@#1@Color}{\csuse{docs@#1@Font}\csuse{docs@#1@Prefix}#2}}%
    }{%
        \mbox{\csuse{docs@#1@Prefix}\csuse{docs@#1@Font}#2}%
    }%
}

% #1: Element type
% #2: Element instance
\NewDocumentCommand{\DocsIndexElement}{ m m }{%
    \ifbool{docs@#1@NoSingleEntry}{}{%
        \index{#2@\DocsElement{#1}{#2}\csuse{docs@#1@IndexRemark}}%
    }%
    \ifbool{docs@#1@NoGroupEntry}{}{%
        \index{\csuse{docs@#1@IndexEntry}!#2@\DocsElement{#1}{#2}}%
    }%
}

% #1: Element type
% #2: Element instance
\NewDocumentCommand{\DocsIndElement}{ m m }{%
    \DocsIndexElement{#1}{#2}%
    \DocsElement{#1}{#2}%
}

% #1: Element type
% #2: Element instance
\NewDocumentCommand{\DocsRefElement}{ m m }{%
    \hyperref[#1:#2]{\DocsElement{#1}{#2}}%
}

% #1: Element type
% #2: Element instance
\NewDocumentCommand{\DocsDefElement}{ m m }{%
    \phantomsection%
    \label{#1:#2}%
    \DocsIndexElement{#1}{#2}%
    \DocsElement{#1}{#2}%
}

% #1: Element type
% #2: Element instance
\NewDocumentCommand{\DocsRefIndElement}{ m m }{%
    \DocsIndexElement{#1}{#2}%
    \hyperref[#1:#2]{\DocsElement{#1}{#2}}%
}

% #1: Element type
% #2: Element instance
% #3: Arguments
% #4: Value
\NewDocumentEnvironment{element*}{ m m m m }{%
    \begin{tcolorbox}[
        title = {%
        \hspace{-2em}\DocsElement{#1}{#2}%
        \docs@IfHasLength{#3}{\csuse{docs@#1@ArgumentsPrefix}#3}{}%
        \docs@IfHasLength{#4}{\csuse{docs@#1@ComplementPrefix}#4}{}%
        },
        description,
    ]%
    }{%
    \end{tcolorbox}%
    \medskip%
}

% #1: Element type
% #2: Element instance
% #3: Arguments
% #4: Default
\NewDocumentEnvironment{elementdef}{ m m m m }{
    \begin{element*}{#1}{#2}{#3}{#4}
        \DocsIndexElement{#1}{#2}%
        \label{#1:#2}
        }{
    \end{element*}
}

% #1: Element type
% #2: Environment name
% #3: Arguments
% #4: Environment contents
\NewDocumentEnvironment{elementenv*}{ m m m m }{%
    \begin{tcolorbox}%
        [
        title = {%
            %! parser=off
            \hspace{-2em}\latexinline!\begin!\texttt{\{}\csuse{#1}{#2}\texttt{\}}#3\par
            \docs@IfHasLength{#4}{#4}{\Argument{environment contents}}\par
            \hspace{-2em}\latexinline!\end!\texttt{\{}\csuse{#1}{#2}\texttt{\}}%
            %! parser=on
        },
        description,
        ]
            }{%
    \end{tcolorbox}%
    \medskip%
}

\NewDocumentEnvironment{elementenv}{ m m m }{%
    \begin{elementenv*}{#1}{#2}{#3}
    }{%
    \end{elementenv*}
}

\definecolor{docs@OptionColor}{HTML}{687821}
\colorlet{docs@EnvironmentColor}{brown!80!magenta}
\colorlet{docs@MacroColor}{green!50!black}

%\colorlet{colorcolor}{blue!75!black}
%\colorlet{palettecolor}{teal}
%\definecolor{stylecolor}{HTML}{4c7c71}

%\DocsCreateElement{Package}{
%    color = docs@MacroColor,
%    prefix = \textbackslash,
%    no single index,
%    no group index,
%}
\DocsCreateElement{Option}{
    color = docs@OptionColor,
    arguments prefix = \texttt{ = },
    index heading = Options,
    index remark = ~(option),
}
\DocsCreateElement{Macro}{
    prefix = \textbackslash,
    color = docs@MacroColor,
    index heading = Macros,
    index remark = ~(macro),
}
\DocsCreateElement{Environment}{
    color = docs@EnvironmentColor,
    index heading = Environments,
    index remark = ~(environment),
}


\AfterBeginDocument{\sloppy}